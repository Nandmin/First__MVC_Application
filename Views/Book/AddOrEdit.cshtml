@model MVC_CRUD_app.Models.BookViewModel

@{
    ViewData["Title"] = Model.BookId == 0 ? "Create Book":"Update Book" ;
}

<h1>@ViewData["Title"]</h1>

<h4>BookViewModel minta</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        @*<form asp-action="AddOrEdit" autocomplete="off"> nem jegyzi meg, hogy korábban milyen értékek kerültek beírásra és nem jelennek meg legördülőben*@
        <form asp-action="AddOrEdit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="BookId" />
            <div class="form-group">
                <label asp-for="Author" class="control-label"></label>
                <input asp-for="Author" class="form-control" />
                <span asp-validation-for="Author" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Price" class="control-label"></label>
                <input asp-for="Price" class="form-control" />
                <span asp-validation-for="Price" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Submit" class="btn btn-primary" />
                @*SQL DB-be tárolt eljárásként felvettük, ha adat érkezik, akkor mit csináljon (ha van id, akkor update, ha nincs, akkor új rekord)*@
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
